@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Dark Black and Yellow Theme */
    --background: 0 0% 5%;
    --foreground: 0 0% 98%;

    /* Yellow Tones */
    --yellow: 48 100% 50%;
    --yellow-light: 48 100% 60%;
    --yellow-dark: 45 100% 45%;

    /* Black Tones */
    --black: 0 0% 5%;
    --black-soft: 0 0% 8%;
    --black-light: 0 0% 12%;

    /* Design System Tokens */
    --primary: 48 100% 50%;
    --primary-foreground: 0 0% 5%;

    --secondary: 48 100% 60%;
    --secondary-foreground: 0 0% 5%;

    --accent: 45 100% 45%;
    --accent-foreground: 0 0% 98%;

    --card: 0 0% 8%;
    --card-foreground: 0 0% 98%;

    --muted: 0 0% 15%;
    --muted-foreground: 0 0% 60%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 100%;

    --border: 0 0% 20%;
    --input: 0 0% 12%;
    --ring: 48 100% 50%;

    --radius: 1rem;

    /* Gradients */
    --gradient-hero: linear-gradient(135deg, hsl(48 100% 50% / 0.3) 0%, hsl(0 0% 5%) 100%);
    --gradient-yellow: linear-gradient(135deg, hsl(48 100% 50%) 0%, hsl(45 100% 45%) 100%);
    --gradient-overlay: linear-gradient(180deg, hsl(0 0% 5% / 0.6) 0%, hsl(0 0% 5% / 0.95) 100%);

    /* Shadows */
    --shadow-yellow: 0 10px 40px hsl(48 100% 50% / 0.4);
    --shadow-yellow-strong: 0 15px 50px hsl(48 100% 50% / 0.6);
    --shadow-elegant: 0 20px 60px hsl(0 0% 0% / 0.5);

    /* Animations */
    --transition-smooth: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    --transition-bounce: all 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  .dark {
    --background: 0 0% 5%;
    --foreground: 0 0% 98%;

    --card: 0 0% 8%;
    --card-foreground: 0 0% 98%;

    --muted: 0 0% 15%;
    --muted-foreground: 0 0% 60%;

    --border: 0 0% 20%;
    --input: 0 0% 12%;
  }
  .theme {
    --animate-aurora: aurora 8s ease-in-out infinite alternate;
    --animate-line-shadow: line-shadow 15s linear infinite;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }

  html {
    scroll-behavior: smooth;
  }

  /* Custom utility classes */
  .bg-black {
    background-color: hsl(var(--black));
  }

  .bg-black-soft {
    background-color: hsl(var(--black-soft));
  }

  .bg-gradient-yellow {
    background: var(--gradient-yellow);
  }

  .text-glow-yellow {
    text-shadow: 0 0 30px hsl(48 100% 50% / 0.6);
  }
}

/* ---break---
*/

@theme inline {
  @keyframes aurora {
  0% {
    background-position: 0% 50%;
    transform: rotate(-5deg) scale(0.9);
    }
  25% {
    background-position: 50% 100%;
    transform: rotate(5deg) scale(1.1);
    }
  50% {
    background-position: 100% 50%;
    transform: rotate(-3deg) scale(0.95);
    }
  75% {
    background-position: 50% 0%;
    transform: rotate(3deg) scale(1.05);
    }
  100% {
    background-position: 0% 50%;
    transform: rotate(-5deg) scale(0.9);
    }
  }
  @keyframes line-shadow {
  0% {
    background-position: 0 0;
    }
  100% {
    background-position: 100% -100%;
    }
  }
  @keyframes line-shadow {
  0% {
    background-position: 0 0;
    }
  100% {
    background-position: 100% -100%;
    }
  }
  @keyframes line-shadow {
  0% {
    background-position: 0 0;
    }
  100% {
    background-position: 100% -100%;
    }
  }
}